	.MODEL	TINY	
ADDR_8255_PA	EQU	0270H	;8255 PA鍙?
ADDR_8255_PB	EQU	0271H	;8255 PB鍙?
ADDR_8255_C	EQU	273H	;8255鎺у埗鍙?
ADDR_273	EQU	230H	;8155 PA鍙?
LINE	EQU	ADDR_273	;琛岀嚎1
ROW1	EQU	ADDR_8255_PA	;鍒楃嚎1
ROW2	EQU	ADDR_8255_PB		;鍒楃嚎2
		.STACK	100	
	.DATA		
HUAN   DB 00H,0C0H,00H,0C0H,0FEH,0C0H,07H,0FFH,0C7H,86H,6FH,6CH,3CH,60H,18H,60H
DB 1CH,60H,1CH,70H,36H,0F0H,36H,0D8H,61H,9CH,0C7H,0FH,3CH,06H,00H,00H
YING   DB 60H,00H,31H,0C0H,3FH,7EH,36H,66H,06H,66H,06H,66H,0F6H,66H,36H,66H
DB 37H,0E6H,37H,7EH,36H,6CH,30H,60H,30H,60H,78H,00H,0CFH,0FFH,00H,00H
SHI	   DB 00H,00H,06H,30H,07H,30H,0FH,0FFH,0CH,30H,1FH,0FFH,3BH,33H,7BH,33H
DB 1BH,0FFH,1BH,33H,19H,0B0H,18H,0E0H,18H,60H,18H,0FCH,19H,8FH,1FH,03H
YONG   DB 00,0,1FH,0FEH,18H,0C6H,18H,0C6H,18H,0C6H,1FH,0FEH,018H,0C6H,18H,0C6H
DB 18H,0C6H,1FH,0FEH,18H,0C6H,18H,0C6H,30H,0C6H,30H,0C6H,60H,0DEH,0C0H,0CCH
XING   DB 00H,00H,1FH,0FCH,18H,0CH,1FH,0FCH,18H,0CH,1FH,0FCH,01H,80H,19H,80H
DB 1FH,0FEH,31H,80H,31H,80H,6FH,0FCH,01H,80H,01H,80H,7FH,0FFH,00H,00H
YAN    DB 0,0,0FFH,0FFH,18H,0CCH,18H,0CCH,30H,0CCH,30H,0CCH,7FH,0FFH,7CH,0CCH
	   DB 0FCH,0CCH,3CH,0CCH,3CH,0CCH,3DH,8CH,3DH,8CH,33H,0CH,06H,0CH,0CH,0CH
SHI0   DB 01H,80H,00H,0C0H,3FH,0FFH,3CH,06H,67H,0CCH,06H,0C0H,0CH,0C0H,07H,0C0H
DB 06H,0C0H,7FH,0FFH,00H,0C0H,01H,0E0H,03H,30H,06H,18H,1CH,1CH,70H,18H
YAN0   DB 00H,00H,0FCH,60H,0CH,60H,6CH,0F0H,6CH,0D8H,6DH,8FH,6FH,0F8H,7EH,00H
DB 06H,0C6H,07H,66H,3FH,0ECH,0E7H,0ECH,06H,18H,1FH,0FFH,0CH,00H,00H,00H
YI	   DB 0CH,0C0H,0CH,60H,18H,7CH,1BH,6CH,33H,0CH,73H,18H,0F1H,98H,31H,98H
	   DB 30H,0F0H,30H,0F0H,30H,60H,30H,0F0H,31H,98H,33H,0FH,3EH,06H,30H,00H
NONE   DB 00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	   DB 00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H,00H
	.CODE		
	START:	MOV		AX,@DATA	
	MOV	DS,AX	
	MOV	ES,AX	
	NOP		
	CALL	INIT_IO	
	CALL		TEST_LED		;璋冪敤娴嬭瘯瀛愮▼搴?娴嬭瘯LED鏄惁鍏ㄤ寒
	CALL		CLEAR	
;婊氬姩鏄剧ず澶氫釜瀛楃
CHS_SHOW:	MOV		CX,9	
	LEA		SI,HUAN	
CHS_1:	PUSH	CX	
	MOV	CX,16		
CHS_2:	CALL	DISP_CH	
	INC	SI	
	INC	SI	
	LOOP		CHS_2	
	POP	CX	
	LOOP		CHS_1	
	JMP	CHS_SHOW	
;鏄剧ず涓€涓?6*16鐐归樀瀛楀瓙绋嬪簭,瀛楀瀷鐮佹斁鍦―PTR鎸囧嚭鐨勫湴鍧€
DISP_CH	PROC	NEAR	
	PUSH		CX	
	MOV	CX,8	
DISP_CH_1:	CALL	DISP1	
	LOOP		DISP_CH_1	
	POP		CX	
	RET		
DISP_CH	ENDP		
;鏄剧ず涓€涓?6*16鐐归樀瀛楀瓙绋嬪簭,瀛楀瀷鐮佹斁鍦ㄦ樉绀虹紦鍐插尯XBUFF
DISP1	PROC	NEAR	
	PUSH		SI	
	PUSH		CX	
	MOV	CX,16	;璁℃暟鍣?16鍒椾緷娆¤鎵弿
	MOV		BL,0FEH		;涓婅竟鍒楄緭鍑哄€?
	MOV	BH,0FFH	;涓嬭竟鍒楄緭鍑哄€?
REPEAT:		MOV		DX,LINE	
	MOV		AX,BX	
	OUT	DX,AX	;涓婅竟鍒楄緭鍑?
	LODSB		
	CALL	ADJUST	;璋冩暣AL,灏咥L涓簩杩涘埗鏁版棆杞?80搴?
	MOV	DX,ROW1	
		OUT	DX,AL	;宸﹁竟琛岃緭鍑?
	LODSB		
	CALL	ADJUST	;璋冩暣AL,灏咥L涓簩杩涘埗鏁版棆杞?80搴?
	MOV	DX,ROW2	
	OUT		DX,AL	;鍙宠竟琛岃緭鍑?
	CALL	DL10MS	
	CALL		CLEAR	
	STC		
	RCL	BL,1	
	RCL	BH,1		;寰幆绉讳綅BX,琛岀嚎鎵弿杈撳嚭0
	LOOP	REPEAT	
	POP	CX	
	POP	SI	
	RET		
DISP1	ENDP		
INIT_IO		PROC	NEAR	
	MOV	DX,ADDR_8255_C	;8255鎺у埗瀛楀湴鍧€
	MOV	AL,80H	;璁剧疆8255鐨凱A銆丳B銆丳C鍙ｄ负杈撳嚭鍙?
	OUT	DX,AL	;鍐欐帶鍒跺瓧
	RET		
INIT_IO		ENDP		
CLEAR	PROC	NEAR	
	MOV	AL,0FFFFH	
	MOV	DX,LINE	
	OUT	DX,AX	
	MOV	AL,0	
	MOV	DX,ROW1	
	OUT	DX,AL	
	MOV	DX,ROW2	
	OUT	DX,AL	
	RET		
CLEAR	ENDP		
;娴嬭瘯LED瀛愮▼搴?鐐逛寒LED骞跺欢鏃?S
TEST_LED	PROC	NEAR		
	MOV	DX,LINE	
	XOR	AX,AX	
	OUT	DX,AX		
	MOV	AL,0FFH	
	MOV	DX,ROW1	
	OUT	DX,AL	
	MOV	DX,ROW2	
	OUT	DX,AL	
	CALL		DL500ms	
	CALL		DL500ms	
	RET		
TEST_LED		ENDP			
;璋冩暣AL涓彇鍒扮殑瀛楀瀷鐮佺殑涓€涓瓧鑺?灏嗘渶楂樹綅璋冩暣浣嶆渶浣庝綅,鏈€浣庝綅璋冩暣涓烘渶楂樹綅
ADJUST	PROC		NEAR	
	PUSH		CX	
	MOV	CX,8	
ADJUST1:	RCL	AL,1	
	XCHG	AL,AH	
	RCR		AL,1	
	XCHG	AL,AH	
	LOOP		ADJUST1	
	MOV		AL,AH	
	POP	CX	
	RET		
ADJUST	ENDP		
DL10ms	PROC		NEAR	
	PUSH		CX	
	MOV	CX,133	
	LOOP	$	
	POP		CX	
	RET		
DL10ms	ENDP			
DL500ms		PROC	NEAR	
	PUSH		CX	
	MOV		CX,0FFFFH	
	LOOP		$	
	POP	CX	
	RET		
DL500ms	ENDP		
			
	END	START